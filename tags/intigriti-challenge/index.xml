<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>intigriti-challenge on Mystify</title>
    <link>https://mystiz.hk/tags/intigriti-challenge/</link>
    <description>Recent content in intigriti-challenge on Mystify</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Feb 2024 00:00:00 +0800</lastBuildDate><atom:link href="https://mystiz.hk/tags/intigriti-challenge/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Intigriti&#39;s XSS Challenge (February 2024)</title>
      <link>https://mystiz.hk/posts/2024/2024-02-23-intigriti-xss/</link>
      <pubDate>Fri, 23 Feb 2024 00:00:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2024/2024-02-23-intigriti-xss/</guid>
      <description>I came across with @intigriti&amp;rsquo;s XSS challenge this month. This time we are given a love letter storage system which allow us to show our love to our hacking buddies.
Challenge Summary Solution Part I: Cross-site scripting on GET /readTestLetter/:uuid From the source code, we can see that GET /readTestLetter/:uuid is the only endpoint that returns the user input with the content type text/html. Let&amp;rsquo;s see how is our data handled:</description>
    </item>
    
    <item>
      <title>Intigriti&#39;s XSS Challenge (February 2022)</title>
      <link>https://mystiz.hk/posts/2022/2022-02-14-intigriti-xss/</link>
      <pubDate>Mon, 14 Feb 2022 10:00:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2022/2022-02-14-intigriti-xss/</guid>
      <description>This is another round of @intigriti&#39;s XSS challenge, and this time it is written by @aszx87410. I spent around four hours solving it.
Challenge Summary We are given a form that allows us a create a character. We are allowed to
 choose a name (shorter than 24 characters), and inform if we have played the game.  We will be redirected to /challenge/xss.html?q=mystiz&amp;amp;first=yes (if you are mystiz who is not a first-timer to the game).</description>
    </item>
    
    <item>
      <title>Intigriti&#39;s XSS Challenge (January 2022)</title>
      <link>https://mystiz.hk/posts/2022/2022-01-17-intigriti-xss/</link>
      <pubDate>Mon, 17 Jan 2022 23:00:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2022/2022-01-17-intigriti-xss/</guid>
      <description>@intigriti has a XSS challenge every month. The challenge is not hard this time and I am able to solve it in an hour or two. The best thing I learned is to recover source code using the source map file.
Challenge Summary We are given a super secure HTML viewer - we can craft a HTML document and parse it. For example, we can send the below content and press the &amp;quot;Parse&amp;quot; button:</description>
    </item>
    
  </channel>
</rss>
