<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>challenge-writing on Mystify</title>
    <link>https://mystiz.hk/tags/challenge-writing/</link>
    <description>Recent content in challenge-writing on Mystify</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Jun 2025 07:53:00 +0800</lastBuildDate><atom:link href="https://mystiz.hk/tags/challenge-writing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Google CTF 2025 Quals Writeup</title>
      <link>https://mystiz.hk/posts/2025/2025-06-30-google-ctf/</link>
      <pubDate>Mon, 30 Jun 2025 07:53:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2025/2025-06-30-google-ctf/</guid>
      <description>I wrote two challenges for Google CTF qualifier - Underhanded and Merkurated. There were 17 and 37 solves during the contest time. I will cover both in this blog post.
Underhanded Challenge Summary  Proudly sharing our Python implementation of AES. By the way, we sneakily hid a backdoor. Can you see sharp and see what went wrong?
Attachments: underhanded.zip
 We are given yet another Python implementation of AES.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2024 Quals Writeup (IV): The Reverse Challenges</title>
      <link>https://mystiz.hk/posts/2025/2025-06-29-hkcert-ctf-4/</link>
      <pubDate>Sun, 29 Jun 2025 15:30:03 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2025/2025-06-29-hkcert-ctf-4/</guid>
      <description>I also wrote some reverse challenges this year: Void, Cyp.ress and Bashed!. We will cover them all in the last part of the blog post.
Void Challenge Summary  I made a simple webpage that checks whether the flag is correct&amp;hellip; Wait, where are the flag-checking functions?
 We are given a static webpage (source code here), where it asks us for the flag:
 The goal is to provide a legit flag.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2024 Quals Writeup (III): The Web Challenges</title>
      <link>https://mystiz.hk/posts/2025/2025-06-29-hkcert-ctf-3/</link>
      <pubDate>Sun, 29 Jun 2025 15:30:02 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2025/2025-06-29-hkcert-ctf-3/</guid>
      <description>Surprisingly, I also wrote three series of web challenges this year: Custom Web Server, Mystiz&amp;rsquo;s Mini CTF and ‚ö°. They are all inspired from the real-life &amp;ndash; either from security reviews or the bugs I came across while developing web apps.
Custom Web Server (1) Challenge Summary  Someone said: &amp;lsquo;One advantage of having a homemade server is that it becomes much harder to hack.&amp;rsquo; Do you agree? Give reasons.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2024 Quals Writeup (II): Other Crypto Challenges</title>
      <link>https://mystiz.hk/posts/2025/2025-06-29-hkcert-ctf-2/</link>
      <pubDate>Sun, 29 Jun 2025 15:30:01 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2025/2025-06-29-hkcert-ctf-2/</guid>
      <description>In the second part, I will cover the remaining cryptography challenges, including Almost DSA, mAEStro and Mask-mask-RSA.
Almost DSA Challenge Summary  According to an external auditor, my code implementing the data signature algorithm (DSA) has a one-byte security fix on a critical issue.
Well, I am not bothered. Convince me by giving me the flag!
Attachment: almost-dsa_148b8b2cd8c78df02bbdc24bd7fa3f56.zip
 We are given $(p, q, g)$, the public parameters of the data signature algorithm (DSA).</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2024 Quals Writeup (I): RSA LCG and Pigeon Post</title>
      <link>https://mystiz.hk/posts/2025/2025-06-29-hkcert-ctf-1/</link>
      <pubDate>Sun, 29 Jun 2025 15:30:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2025/2025-06-29-hkcert-ctf-1/</guid>
      <description>Black Bauhinia co-organizes the HKCERT CTF for the fifth year. I wrote 18 challenges (in 11 series) this year and here is a series of blog posts covering all of them. I will cover two cryptography series in the first part: RSA LCG and Pigeon Post.
ü§° What this year? It should be &amp;ldquo;last year&amp;rdquo; at the time I upload the blog post. I have been procrastinating the writeup and I am sorry about that.</description>
    </item>
    
    <item>
      <title>Google CTF 2024 (III): IDEA</title>
      <link>https://mystiz.hk/posts/2024/2024-06-24-google-ctf-3/</link>
      <pubDate>Mon, 24 Jun 2024 02:00:02 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2024/2024-06-24-google-ctf-3/</guid>
      <description>IDEA is a challenge written by @0xdeuterium. He even provided me the paper to refer, my only contribution to the challenge is to optimize the original solution so that we don&amp;rsquo;t need 65K-ish oracle calls.
Challenge Summary  We have a new idea about a cipher which we think may provide pretty good privacy. So bruce for impact as we may patent our new proposed encryption standard.
nc idea.2024.ctfcompetition.com 1337</description>
    </item>
    
    <item>
      <title>Google CTF 2024 (II): ZKPOK</title>
      <link>https://mystiz.hk/posts/2024/2024-06-24-google-ctf-2/</link>
      <pubDate>Mon, 24 Jun 2024 02:00:01 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2024/2024-06-24-google-ctf-2/</guid>
      <description>ZKPOK is a challenge I made while learning Zero Knowledge Proofs on zk-learning.org. I was watching the first lecture video, I came across with the interactive proof for quadratic residues at 20:00. This made me ponder - it should be easy to apply Fiat-Shamir transform to make this non-interactive. Let&amp;rsquo;s also use MD5 so that it could be vulnerable. Hours later, this challenge appeared without a proper solve script.
Surprisingly, the challenge ended up having three solves, which makes this the least solved challenge in Google CTF 2024.</description>
    </item>
    
    <item>
      <title>Google CTF 2024 (I): Blinders</title>
      <link>https://mystiz.hk/posts/2024/2024-06-24-google-ctf-1/</link>
      <pubDate>Mon, 24 Jun 2024 02:00:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2024/2024-06-24-google-ctf-1/</guid>
      <description>This is yet another edition of Google CTF, where I wrote some crypto challenges with my colleagues. I contributed on three challenges this time, namely, Blinders, ZKPOK and IDEA. There are respectively 56, 3 and 4 solves (out of 267 teams scoring non-zero flags) during the contest period.
Blinders is one of the challenges I coauthored, which introduces a protocol for private set membership.
Challenge Summary  If you are really efficient at guessing which number is missing from {0, 1, &amp;hellip;, 255}, I am more than happy to share you the flag!</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2023 Postmortem (III): The Remaining Challenges</title>
      <link>https://mystiz.hk/posts/2024/2024-01-27-hkcert-ctf-3/</link>
      <pubDate>Sat, 27 Jan 2024 05:30:02 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2024/2024-01-27-hkcert-ctf-3/</guid>
      <description>We will finally cover the non-crypto challenges that I wrote for HKCERT CTF 2023. This includes one misc (Hackforces), two pwn (ISA Jump Scare &amp;amp; ISA Jogger) and two reverse (The Flag Game &amp;amp; Loot and Scoot) challenges.
Hackforces Challenge Summary  Do you know Codeforces? Well, what you need is to find a corner case to make the given submission not work.
http://HOST:PORT/
Attachments: hackforces.zip
 We are given an introductory competitive programming problem (equivalent to Unique Paths II in LeetCode) with its solution implemented in C.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2023 Postmortem (II): Harder Crypto Challenges</title>
      <link>https://mystiz.hk/posts/2024/2024-01-27-hkcert-ctf-2/</link>
      <pubDate>Sat, 27 Jan 2024 05:30:01 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2024/2024-01-27-hkcert-ctf-2/</guid>
      <description>In the second part of the series, I will cover four cryptography challenges: baDES, Maybe Someday, Cipher Bridging Service and RSA Triooo. Interestingly, most of them are somehow &amp;ldquo;plagiarized&amp;rdquo; from the other CTFs.
baDES Challenge Summary  DES, published as an official Federal Information Processing Standard in 1977, is considered bad in 2023. We will slightly change the cipher and attack that together!
https://HOST:PORT/
Note: There is a guide for this challenge here.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2023 Postmortem (I): Easier Crypto Challenges</title>
      <link>https://mystiz.hk/posts/2024/2024-01-27-hkcert-ctf-1/</link>
      <pubDate>Sat, 27 Jan 2024 05:30:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2024/2024-01-27-hkcert-ctf-1/</guid>
      <description>This is yet another moment that Black Bauhinia co-organizes HKCERT CTF. This year, I am slightly more productive than the previous years and wrote 13 challenges for the CTF. There are three blog posts in this series, where I will respectively cover the author&amp;rsquo;s solutions to the easier crypto challenges, the harder crypto challenges and the remaining challenges.
The below is the list of challenges:
   Challenge Name Category Difficulty Score Solves     The Art of Embarrassment Crypto ‚≠ê 150 0 - - -   Sign me a Flag (I) Crypto üë£ 150 19 25 37 31   Sign me a Flag (II) Crypto ‚≠ê‚≠ê 250 0 0 5 6   Solitude, Solitude, Solitude Crypto ‚≠ê 150 0 5 10 17   baDES Crypto üë£ 200 5 20 20 15   Maybe Someday Crypto ‚≠ê‚≠ê‚≠ê 350 - 0 5 4   Cipher Bridging Service Crypto ‚≠ê‚≠ê‚≠ê‚≠ê 450 0 10 3 5   RSA Triooo Crypto ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê 500 - 0 1 2   Hackforces Misc ‚≠ê‚≠ê‚≠ê 300 5 6 8 8   ISA Jump Scare Pwn üë£ 200 12 20 30 15   ISA Jogger Pwn ‚≠ê‚≠ê 200 5 15 27 13   The Flag Game Reverse ‚≠ê‚≠ê 200 8 10 19 8   Loot and Scoot Reverse ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê 500 0 0 3 3    Step-by-step challenges are marked by üë£ in the &amp;ldquo;Difficulty&amp;rdquo; column.</description>
    </item>
    
    <item>
      <title>Firebird CTF 2024: Goldilocks</title>
      <link>https://mystiz.hk/posts/2024/2024-01-21-firebird-ctf/</link>
      <pubDate>Sun, 21 Jan 2024 22:00:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2024/2024-01-21-firebird-ctf/</guid>
      <description>This is yet another annual Firebird CTF and I only wrote one cryptography challenge this time, Goldilocks. There were one solve (out of 53 participating teams) during the contest period.
Challenge Summary  If you think discrete log is too easy, try discrete log log. It is easier.
nc HOST PORT
Attachments: chall.py
 In this challenge, we are given primes $p, q$ such that $p = 2q + 1$ and $p$ is 1024 bits.</description>
    </item>
    
    <item>
      <title>Bauhinia CTF 2023: How to Stop Time</title>
      <link>https://mystiz.hk/posts/2023/2023-08-21-b6actf/</link>
      <pubDate>Mon, 21 Aug 2023 09:45:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2023/2023-08-21-b6actf/</guid>
      <description>After four years of team formation, we organized our first edition of Bauhinia CTF last weekend. There are over 650 teams registered and over 200 teams scored. This year, I made one crypto challenge, How to Stop Time. I also coauthored a web/crypto challenge, Amnesia, with @chthollic_.
This post is served as a short writeup of How to Stop Time, a crypto challenge with six solves during the contest period.</description>
    </item>
    
    <item>
      <title>Google CTF 2023: MHK2</title>
      <link>https://mystiz.hk/posts/2023/2023-06-26-google-ctf-mhk2/</link>
      <pubDate>Mon, 26 Jun 2023 07:45:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2023/2023-06-26-google-ctf-mhk2/</guid>
      <description>MHK2 is one of the challenges I coauthored for Google CTF 2023 and there were 18 teams solving this challenge during the contest time.
Challenge Summary  I hid your flag using one of Murakami&amp;rsquo;s knapsacks
Attachments: MHK2.sage, output.txt
 This challenge implements the knapsack cryptosystem from Y. Murakami, S. Hamasho and M. Kasahara&amp;rsquo;s paper &amp;ldquo;A knapsack public-key cryptosystem using two random sequences&amp;rdquo;. Below summarizes how a keypair is generated and how a bit is being encrypted:</description>
    </item>
    
    <item>
      <title>MOCSCTF 2023 Postmortem</title>
      <link>https://mystiz.hk/posts/2023/2023-03-06-mocsctf/</link>
      <pubDate>Mon, 06 Mar 2023 00:45:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2023/2023-03-06-mocsctf/</guid>
      <description>I prepared three challenges on behalf of @blackb6a for MOCSCTF, which is a 8-hour long CTF happened yesterday. This blogpost serves as the write-up for the three challenges that I wrote.
There are two solves (out of 40 participants) for Three-pass, and zero solves for jav-asr-ipt and Catch-22 Mini.
Three-pass Challenge Summary  Shamir is a famous cryptographer. He invented the three-pass protocol, so I don&amp;rsquo;t see it is unsafe.</description>
    </item>
    
    <item>
      <title>Firebird Internal CTF 2023 Writeup</title>
      <link>https://mystiz.hk/posts/2023/2023-01-30-firebird-internal-ctf/</link>
      <pubDate>Mon, 30 Jan 2023 16:40:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2023/2023-01-30-firebird-internal-ctf/</guid>
      <description>Like in 2021 and 2022, I contributed some challenges for Firebird&amp;rsquo;s internal CTF, which are from the Hong Kong University of Science and Technology. This time I wrote three crypto challenges: Randomsum, Shelter and Threerider.
There were 24 teams participating. There were three solves for Randomsum, while Shelter and Threerider were unsolved during the CTF.
üéâ Thank you! Kudos to @LifeIsHard for reading the write-up and giving me comments (including those erratas) so that I could improve the blog post!</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2022 Postmortem (III): The Remaining Challenges</title>
      <link>https://mystiz.hk/posts/2022/2022-12-24-hkcert-ctf-3/</link>
      <pubDate>Sat, 24 Dec 2022 16:46:02 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2022/2022-12-24-hkcert-ctf-3/</guid>
      <description>In the last part, I will include the two non-crypto challenges I wrote for HKCERT CTF 2022: Numbers go brrr and Minecraft geoguessr.
‚ÄãËßÄÂ°òÊµ∑Êø±Èü≥Ê®ÇÂô¥Ê≥â / Numbers go brrr (Reverse) Challenge Summary  This program is generating 100 sets of random numbers and they are asking me to send something back, in exchange for a flag. Can you figure out how to get them through?
nc HOST PORT
Attachments: solve.py
 There is a nc service, and we will be given some numbers upon connecting.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2022 Postmortem (II): Harder Crypto Challenges</title>
      <link>https://mystiz.hk/posts/2022/2022-12-24-hkcert-ctf-2/</link>
      <pubDate>Sat, 24 Dec 2022 16:46:01 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2022/2022-12-24-hkcert-ctf-2/</guid>
      <description>‚ú® Regarding the thumbnail. This is my Discord avatar combined with Komi from the anime Komi can&amp;rsquo;t communicate, where the challenge Mystiz can&amp;rsquo;t code is referred to. Made by @byronwai.  We will continue walking through the remaining crypto challenges I wrote for HKCERT CTF 2022: Mystiz can&#39;t code, Slow keystream and King of Rock, Paper, Scissors.
‰∫ûÊ¥≤ÂçîÊúÉÈ¶ôÊ∏Ø‰∏≠ÂøÉ / Mystiz can&#39;t code (Crypto) Challenge Summary  Mystiz can&#39;t code! He wanted to implement Advanced Encryption Standard (AES) in batch but he couldn&#39;t do it correctly.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2022 Postmortem (I): Easier Crypto Challenges</title>
      <link>https://mystiz.hk/posts/2022/2022-12-24-hkcert-ctf-1/</link>
      <pubDate>Sat, 24 Dec 2022 16:46:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2022/2022-12-24-hkcert-ctf-1/</guid>
      <description>This is the third year Black Bauhinia co-organized HKCERT CTF. This time I wrote nine challenges: Seven crypto, one reverse and one misc.
Similar to the last year, I have a series of three blog posts walking through the challenges that I wrote. We will discuss the four easier crypto challenges: Flawed ElGamal, Catch-22, Rogue Secret Assistant and Base64 encryption.
This is an index of the challenges I wrote for HKCERT CTF 2022.</description>
    </item>
    
    <item>
      <title>H4CK1NG G00GL3 - Ep 005 Ch 002: Project Zero Adventure</title>
      <link>https://mystiz.hk/posts/2022/2022-10-19-h4ck1ng-g00gl3/</link>
      <pubDate>Wed, 19 Oct 2022 00:02:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2022/2022-10-19-h4ck1ng-g00gl3/</guid>
      <description>HACKING GOOGLE is a documentary of Google&amp;rsquo;s cybersecurity teams and H4CK1NG G00GL3 is it&amp;rsquo;s CTF counterpart. Project Zero Adventure is a cryptography challenge I wrote.
In the game, the players control the Security Princess to dodge the obstacles and catch the bugs (a variant of Google Chrome&amp;rsquo;s dinosaur game). After that, the server will sign messages consisting of the players&#39; name and the score via the /sign API. The players will then submit it to the /highscore API.</description>
    </item>
    
    <item>
      <title>Google CTF 2022: Maybe Someday</title>
      <link>https://mystiz.hk/posts/2022/2022-07-20-google-ctf-maybe-someday/</link>
      <pubDate>Wed, 20 Jul 2022 20:09:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2022/2022-07-20-google-ctf-maybe-someday/</guid>
      <description>This is the third year I had a writeup on Google CTF (see my writeup in 2020 and 2021). Yet this time it is the official writeup for a challenge - as the challenge author! There are eventually 35 solvers (out of 382 teams) for the challenge.
Challenge Summary  Leave me your ciphertexts. I will talk to you later.
nc HOST PORT
Attachments: chall.py
 We are given a public key of Paillier cryptosystem $(n, g)$, and is asked to complete 16 rounds of challenge $\mathcal{C}$.</description>
    </item>
    
    <item>
      <title>MOCSCTF 2022 Postmortem</title>
      <link>https://mystiz.hk/posts/2022/2022-02-19-mocsctf/</link>
      <pubDate>Sat, 19 Feb 2022 17:50:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2022/2022-02-19-mocsctf/</guid>
      <description>@blackb6a helped preparing some challenges for MOCSCTF, a 8.5-hour long CTF in Macau. This time I wrote nine challenges and @hoifanrd made one of them (3-AES). This blog post covers the intended solution for all of them.
These are the summary of the challenges:
   Challenge Name Category Solves     RSA Trio Crypto 2/43   Slightly Informative Crypto 2/43   NP-SHA256 Crypto 1/43   HMAC-SHA256 Crypto 2/43   RC4 Crypto 0/43   HashTable Misc 3/43   Wordle Crypto, Misc 0/43   3-AES Crypto, Misc 0/43   Elementary Reverse 0/43   Redactor Reverse 1/43    RSA Trio (Crypto) Challenge Summary  RSA is difficult.</description>
    </item>
    
    <item>
      <title>Firebird Internal CTF 2022 Writeup</title>
      <link>https://mystiz.hk/posts/2022/2022-01-23-firebird-internal-ctf/</link>
      <pubDate>Sun, 23 Jan 2022 22:07:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2022/2022-01-23-firebird-internal-ctf/</guid>
      <description>This is the time that Firebird Internal CTF happens. I made three crypto challenges this year - Lack of Entropy (‚≠ê), Authenticator (‚≠ê‚≠ê) and Collider (‚≠ê‚≠ê). I will discuss the solution for all of them in the blog post.
What are the stars? They are the difficulties I estimated when comparing to global CTFs (where I documented them here since Q3 last year).  Lack of Entropy (Crypto) Three (out of six) teams solved this during the CTF.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2021 Postmortem (IV): The Remaining Ones</title>
      <link>https://mystiz.hk/posts/2021/2021-11-18-hkcert-ctf-4/</link>
      <pubDate>Thu, 18 Nov 2021 16:05:03 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2021/2021-11-18-hkcert-ctf-4/</guid>
      <description>We will cover the remaining challenges I wrote in this part: Flag Checker‚Ñ¢, The Wilderness and Potion of Ciphermath.
Âπ´Á∑ä‰Ω†ÔºÅÂπ´Á∑ä‰Ω†ÔºÅ / Flag Checker‚Ñ¢ (Pwn) Challenge Summary  Âπ´Á∑ä‰Ω† Âπ´Á∑ä‰Ω†
Áï∂ÁÑ°Âäõ Â†ÖÊåÅÈõÜÊ∞£Âπ´‰Ω†
Á≠âÈ¢®ÂêëËΩâÂ§©Ê∞£
Ë´ãÁõ∏‰ø°‰Ω†‰∏çÊ≠ª
ÁµÑÈöäÊúÉÊíêÂæóËµ∑
You will be Ok
You will be Ok
We are here to help validating your flag! Come use our Flag Checker‚Ñ¢!
nc HOST PORT
Attachments: service.c, service
 When connected to the server, we are asked the name.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2021 Postmortem (III): The Reverse Challenges</title>
      <link>https://mystiz.hk/posts/2021/2021-11-18-hkcert-ctf-3/</link>
      <pubDate>Thu, 18 Nov 2021 16:05:02 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2021/2021-11-18-hkcert-ctf-3/</guid>
      <description>As the third part of the series, three reversing challenges will be included: The Hardest Path, A Junior Mathematician and Let&#39;s Chill.
ÊúÄÈõ£Ë°åÁöÑË∑Ø / The Hardest Path (Reverse) Challenge Summary  ÂØßÈ°ò‰∏çÊèÄÊúÄÊòìÁöÑË∑Ø Ë°åÊ•µÈÇÑÊú™Âà∞
ÂØßÈ°ò‰Ω†ÊúÄÂæåÊú™ÂÇæÊÖï ‰ΩÜ‰ø°ÂøµÂÆâÂ•Ω
Âú®ÊÑèÁöÑ ‰∏çÂÜçÊòØ ÊÑõÁöÑÁÖ©ÊÉ±
ÊòØÂì™Ê®£ÂÅö‰∫∫ Êõ¥Ê∏ÖÈ´ò
È§òÁîüÈÇ£ÊÆµÊóÖÈÄî
ËàáÂì™È°û‰∫∫ÂÖ±Ëàû
When you think reverse engineering is hard, try working on reverse engineering challenges those need your algorithmic thinking skills!
nc HOST PORT
Attachments: chall.py, lost.py
 We are given two Python files excerpted below:</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2021 Postmortem (II): Harder Crypto Challenges</title>
      <link>https://mystiz.hk/posts/2021/2021-11-18-hkcert-ctf-2/</link>
      <pubDate>Thu, 18 Nov 2021 16:05:01 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2021/2021-11-18-hkcert-ctf-2/</guid>
      <description>In this part, three harder crypto challenges will be covered: Tenet: The Plagarism, Sratslla SEA and Sign in Please, Again.
FreeRider / Tenet: The Plagarism (Crypto) Challenge Summary  Âπ≥Êó•ÊàëÂèàË¨õ Â∞ç‰Ωè‰Ω†Ë¨õ
emailË¶Åcheck deadlineË¶ÅËøΩ
ÂâçÊó•ÊàëÊèêÂíó ‰Ω†Âó∞partÂòÖÂäüË™≤
ÈªûËß£ËÆäÂíóÊàëÊúÄÁ´ãÁ≥Ø
The deadline for writing challenges is coming!
Mystiz, who claimed himself not well-known reusing challenges, decided to free-ride and plagarize challenges from HKCERT CTF 2020. Maybe you can reuse the solve script last year for the flag.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2021 Postmortem (I): Easier Crypto Challenges</title>
      <link>https://mystiz.hk/posts/2021/2021-11-18-hkcert-ctf-1/</link>
      <pubDate>Thu, 18 Nov 2021 16:05:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2021/2021-11-18-hkcert-ctf-1/</guid>
      <description>Black Bauhinia coorganized HKCERT CTF 2021 and helped 95% of the technical stuffs, including challenge setting, platform development, infrastructure and etc. I will be writing a series of blog posts talking about the contest, and the first four would be the writeups of the challenges those I wrote.
In the first blog post, we will be going through four easier crypto challenges: A Joke Cipher, Cipher Mode Picker, Key Backup Service 1 and Key Backup Service 2.</description>
    </item>
    
    <item>
      <title>HKCERT CTF 2020 Postmortem</title>
      <link>https://mystiz.hk/posts/2021/2021-03-28-hkcert-ctf/</link>
      <pubDate>Sun, 28 Mar 2021 17:54:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2021/2021-03-28-hkcert-ctf/</guid>
      <description>On August 2020, @blackb6a was invited to co-organize HKCERT CTF 2020 (which is held on November 2020) as one of the challenge authors. This is a CTF for secondary and tertiary students in Hong Kong. Although I had experience preparing CTFs earlier, this is actually the first CTF officially prepared by Black Bauhinia. I have written four challenges for this CTF - Sanity Check II (Web), LF2 (Reverse), Sign In Please (Crypto) and Calm Down (Crypto).</description>
    </item>
    
    <item>
      <title>hoifanrd&#39;s osu! Challenge</title>
      <link>https://mystiz.hk/posts/2021/2021-01-29-hoifanrds-osu-challenge/</link>
      <pubDate>Fri, 29 Jan 2021 21:05:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2021/2021-01-29-hoifanrds-osu-challenge/</guid>
      <description>There are a lot of moments which I telepathed and synced with the challenge author. If it doesn&amp;rsquo;t make sense to you, just bear with it.  This is a beginning of a new series of blog posts that I review CTF challenges those are not publicly accessible. Generally I will spend some time to solve the challenge while discussing with the author, and give some feedback of the challenge.</description>
    </item>
    
    <item>
      <title>Firebird Internal CTF 2021 Writeup</title>
      <link>https://mystiz.hk/posts/2021/2021-01-18-firebird-internal-ctf/</link>
      <pubDate>Mon, 18 Jan 2021 22:00:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2021/2021-01-18-firebird-internal-ctf/</guid>
      <description>I have written four question for Firebird Internal CTF - Oofbleck (Crypto), Obvious Transfer (Crypto), RC4 (Misc) and Prooof-ooof-Wooork (Reverse, Misc). I will be including all of them in this blog post.
Oofbleck (Crypto) One (out of six) team have solved this during the CTF period.
Challenge Summary  Some of the block cipher modes of operation are pretty vulnerable, which includes but not limited to padding oracle in CBC, key-recovery attacks with repeated nonces in GCM and Zerologon in CFB8.</description>
    </item>
    
    <item>
      <title>Firebird Intro CTF: Rotten Secured Algorithm</title>
      <link>https://mystiz.hk/posts/2020/2020-09-21-firebird-intro-ctf-rsa/</link>
      <pubDate>Mon, 21 Sep 2020 16:15:00 +0800</pubDate>
      
      <guid>https://mystiz.hk/posts/2020/2020-09-21-firebird-intro-ctf-rsa/</guid>
      <description>Rotten Secured Algorithm is the only challenge that I have written for Firebird Intro CTF. Two people (out of 166) ended up solving the challenge.
There is a Python script attached in the challenge, as well as the output file. Let&#39;s see what&#39;s going on in the Python:
# Challenge written on Aug 26, 2020 by Mystiz. from Crypto.PublicKey import RSA import random import time from datetime import datetime from secret import flag t = int(time.</description>
    </item>
    
  </channel>
</rss>
